name: 'Terraform CD'

on:
  workflow_run:
    workflows: ["Terraform CI"] # Name of the workflow to monitor
    types: [completed]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform-CD'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      # Azure Login (using Service Principal)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
      
      - name: Debug Workflow Context
        run: |
            echo "Triggered by workflow: ${{ github.event.workflow_run.name }}"
            echo "Run ID: ${{ github.event.workflow_run.id }}"

      
      - name: Get artifact download URL
        uses: actions/github-script@v6
        id: get-artifact
        with:
          script: |
              const runId = ${{ github.event.workflow_run.id }};
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
               });

              const match = artifacts.data.artifacts.find(a => a.name === "terraform-plan");
              if (!match) {
                 throw new Error("Artifact not found");
               }

              return match.archive_download_url;



      - name: Download artifact
        run: |
          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -o terraform-plan.zip \
              "${{ steps.get-artifact.outputs.result }}"
          unzip terraform-plan.zip -d terraform-plan

      
      
      - name: Check folder contents of artifacts folder
        run: ls -la terraform-plan

      - name: Move tfplan.out to root
        run: mv terraform-plan/tfplan.out tfplan.out

      # Apply the tfplan to the infrastructure
      - name: Terraform Apply
        run: terraform apply --auto-approve tfplan.out
